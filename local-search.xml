<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计算机组织结构 第十六讲 - 控制器</title>
    <link href="/2023/01/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84-%E7%AC%AC%E5%8D%81%E5%85%AD%E8%AE%B2-%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <url>/2023/01/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84-%E7%AC%AC%E5%8D%81%E5%85%AD%E8%AE%B2-%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h1><h2 id="处理器结构"><a href="#处理器结构" class="headerlink" title="处理器结构"></a>处理器结构</h2><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108091346122.png" alt="image-20230108091346122"></p><p>CPU主要组成部分：ALU、寄存器、控制器（右图），通过<strong>CPU内部总线</strong>连接</p><blockquote><p>复习：</p><p>总线分为<strong>芯片内部总线、系统总线（如连接CPU和内存的总线，分为控制总线、数据总线、地址总线）、通信总线</strong></p></blockquote><h2 id="寄存器分类"><a href="#寄存器分类" class="headerlink" title="寄存器分类"></a>寄存器分类</h2><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108092320535.png" alt="image-20230108092320535"></p><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108093416762.png" alt="image-20230108093416762"></p><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108093600755.png" alt="image-20230108093600755"></p><blockquote><p>规定特定寄存器用途的例子：</p><p>ACC寄存器（累加器），隐含在指令操作码中，节省指令一个操作数的长度</p></blockquote><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108093900452.png" alt="image-20230108093900452"></p><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108094013598.png" alt="image-20230108094013598"></p><p>注意PC始终指向下一条指令地址，取指令、转移、跳步后会立即被修改，而不是指令执行结束后修改</p><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108094549561.png" alt="image-20230108094549561"></p><h2 id="回顾：数据流"><a href="#回顾：数据流" class="headerlink" title="回顾：数据流"></a>回顾：数据流</h2><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108095834579.png" alt="image-20230108095834579"></p><h2 id="微操作"><a href="#微操作" class="headerlink" title="微操作"></a>微操作</h2><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108095648079.png" alt="image-20230108095648079"></p><h3 id="取指周期"><a href="#取指周期" class="headerlink" title="取指周期"></a>取指周期</h3><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108100244776.png" alt="image-20230108100244776"></p><p>每个$t_i$为一个等长的时间单位，即一个微操作</p><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108100623591.png" alt="image-20230108100623591"></p><h4 id="分组原则"><a href="#分组原则" class="headerlink" title="分组原则"></a>分组原则</h4><ul><li><p>有顺序依赖关系的必须分别位于两个时间单位，且顺序不能颠倒</p></li><li><p>涉及同一个寄存器的两个操作（例如先读后写，显然读写的顺序matters），不能在同一个时间单位里</p></li><li><p>效率</p></li></ul><h3 id="间址周期"><a href="#间址周期" class="headerlink" title="间址周期"></a>间址周期</h3><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108101137148.png" alt="image-20230108101137148"></p><h3 id="执行周期"><a href="#执行周期" class="headerlink" title="执行周期"></a>执行周期</h3><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108101225046.png" alt="image-20230108101225046"></p><h3 id="中断周期"><a href="#中断周期" class="headerlink" title="中断周期"></a>中断周期</h3><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108101859300.png" alt="image-20230108101859300"></p><p>两个时间单位更优</p><h3 id="指令周期代码"><a href="#指令周期代码" class="headerlink" title="指令周期代码"></a>指令周期代码</h3><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108102727772.png" alt="image-20230108102727772"></p><h3 id="CPU内部总线"><a href="#CPU内部总线" class="headerlink" title="CPU内部总线"></a>CPU内部总线</h3><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230108103359323.png" alt="image-20230108103359323"></p><p>空心圆：三态门，控制数据在内部总线和寄存器之间的传递，由控制信号控制开关</p><p>$t_3$和$t_3$不能合并，MBR和AC（即ACC）不能同时向CPU内部总线传数据，否则会冲突（联系以太网MAC），故用Y做暂存，分成两个时间单位处理</p><p>同理结果也需要在Z上暂存，否则会与AC向CPU内部总线发送的数据冲突</p>]]></content>
    
    
    <categories>
      
      <category>2022秋季学期</category>
      
      <category>计算机组织结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习初步 第二章 - 模型评估与选择</title>
    <link href="/2023/01/07/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%9D%E6%AD%A5-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E9%80%89%E6%8B%A9/"/>
    <url>/2023/01/07/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%9D%E6%AD%A5-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E9%80%89%E6%8B%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="模型评估与选择"><a href="#模型评估与选择" class="headerlink" title="模型评估与选择"></a>模型评估与选择</h1><h2 id="2-4-评估方法"><a href="#2-4-评估方法" class="headerlink" title="2.4 评估方法"></a>2.4 评估方法</h2><h3 id="如何获得“测试集”（test-set）？"><a href="#如何获得“测试集”（test-set）？" class="headerlink" title="如何获得“测试集”（test set）？"></a>如何获得“测试集”（test set）？</h3><h4 id="常见方法"><a href="#常见方法" class="headerlink" title="常见方法"></a>常见方法</h4><ul><li>留出法（hold-out)</li><li>交叉验证法（cross validation)</li><li>自助法（bootstrap)</li></ul><h4 id="原则：测试集应该与训练集“互斥”"><a href="#原则：测试集应该与训练集“互斥”" class="headerlink" title="原则：测试集应该与训练集“互斥”"></a>原则：测试集应该与训练集“互斥”</h4><p><img src="https://cttts-oss.oss-cn-shanghai.aliyuncs.com/img/image-20230107170338581.png" alt="image-20230107170338581"></p>]]></content>
    
    
    <categories>
      
      <category>2023寒假</category>
      
      <category>机器学习初步（2022秋）</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexo</title>
    <link href="/2023/01/07/Hello-Hexo/"/>
    <url>/2023/01/07/Hello-Hexo/</url>
    
    <content type="html"><![CDATA[<h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><p>希望能督促我好好记笔记</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hello</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
